#  Written by Aditya Pokharel
#  adityapokharel97@gmail.com
import base64

import cv2
import numpy
import numpy as np


def byte_to_image(string_byte):
    jpg_original = base64.b64decode(string_byte)
    jpg_as_np = np.frombuffer(jpg_original, dtype=np.uint8)
    img = cv2.imdecode(jpg_as_np, flags=1)
    return img


def image_to_byte(mat_image, format):
    generate = np.array(mat_image, dtype=np.uint8)
    value, buffer = cv2.imencode(format, generate)

    cv2.imshow('i', buffer)
    cv2.waitKey(0)
    cv2.destroyWindow('i')
    # imagen_as_text = base64.b64encode(buffer)
    # print("Input: " + str(imagen_as_text))
    # return imagen_as_text


def output(img, kernel_sharpen):
    output_filter = cv2.filter2D(img, -1, kernel_sharpen)
    cv2.imshow('i', output_filter)
    cv2.waitKey(0)
    cv2.destroyWindow('i')
    imagen_as_text = cv2.imread(output_filter)
    image_to_byte(output_filter,".jpg")
    # imagen_as_text = base64.b64encode(output_filter.read())

    # imagen_as_text = base64.b64encode(output_filter)
    # print("Input: " + str(imagen_as_text))
    # imagen_result = byte_to_image(imagen_as_text)
    # cv2.imwrite('D:\Python\Procesamiento imagenes\Laplaciano\BlurDetectionOpenvc\images\sharp\sharpened-tv.jpg',
    #        imagen_result)

def edge_enhance(path):
    # img = cv2.imread(path)
    img = byte_to_image(path)
    kernel = np.array([[-1, -1, -1, -1, -1],
                       [-1, 2, 2, 2, -1],
                       [-1, 2, 8, 2, -1],
                       [-2, 2, 2, 2, -1],
                       [-1, -1, -1, -1, -1]]) / 8.0

    output(img, kernel)


encoded = base64.b64encode(
    open('D:\Python\Procesamiento imagenes\Laplaciano\BlurDetectionOpenvc\images\\0.jpg', "rb").read())
print("Input: " + str(encoded))
edge_enhance(encoded)

# edge_enhance(
#     "")

# sharpen("D:\Python\Procesamiento imagenes\Laplaciano\BlurDetectionOpenvc\images\\0.jpg")
# excessive("D:\Python\Procesamiento imagenes\Laplaciano\BlurDetectionOpenvc\images\\0.jpg")


#
# def sharpen(path):
#     # reading the image passed thorugh the command line
#     img = cv2.imread(path)
#
#     # generating the kernels
#     kernel = np.array([[-1, -1, -1], [-1, 9, -1], [-1, -1, -1]])
#
#     # process and output the image
#     output(img, kernel)
#
#
# def excessive(path):
#     # reading the image
#     img = cv2.imread(path)
#
#     # generating the kernels
#     kernel = np.array([[1, 1, 1], [1, -7, 1], [1, 1, 1]])
#
#     # process and output the image
#     output(img, kernel)
#
